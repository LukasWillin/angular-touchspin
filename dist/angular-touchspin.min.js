/*! angular-touchspin v1.4.6 | MIT | built with ♥ by Niko Kovačič <niko.kovacic2@gmail.com>*/
!function(t,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define([],n):"object"==typeof exports?exports["angular-touchspin"]=n():t["angular-touchspin"]=n()}(this,function(){return function(t){function n(o){if(e[o])return e[o].exports;var i=e[o]={exports:{},id:o,loaded:!1};return t[o].call(i.exports,i,i.exports,n),i.loaded=!0,i.exports}var e={};return n.m=t,n.c=e,n.p="",n(0)}([function(t,n,e){t.exports=e(3)},function(t,n){},function(t,n){t.exports='<div class="input-group bootstrap-touchspin" ng-class="{ \'bootstrap-touchspin-disabled\': vm.disabled }"> <span class=input-group-btn ng-if=!vm.touchSpinOptions.verticalButtons> <button ng-class=vm.touchSpinOptions.buttonDownClass type=button ng-disabled=vm.disabled ng-mousedown="vm.mouseDown($event, false)" ng-mouseup=vm.mouseUp($event) ng-mouseenter=vm.mouseEnter($event) ng-mouseleave=vm.mouseLeave($event) nk-touchstart="vm.buttonTouchStart($event, false)" nk-touchend=vm.buttonTouchEnd($event)> - </button> </span> <span class=input-group-addon ng-if=vm.touchSpinOptions.prefix ng-bind=vm.touchSpinOptions.prefix> </span> <input type=text ng-model=vm.val class=form-control ng-disabled=vm.disabled ng-blur=vm.checkValue() ng-focus=vm.focus() ng-keyup=vm.keyUp($event) ng-keydown=vm.keyDown($event) /> <span class=input-group-addon ng-class=vm.touchSpinOptions.postfixExtraClass ng-if=vm.touchSpinOptions.postfix ng-bind=vm.touchSpinOptions.postfix> </span> <span class=input-group-btn ng-if=!vm.touchSpinOptions.verticalButtons> <button class="btn btn-default" ng-class=vm.touchSpinOptions.buttonUpClass type=button ng-disabled=vm.disabled ng-mousedown="vm.mouseDown($event, true)" ng-mouseup=vm.mouseUp($event) ng-mouseenter=vm.mouseEnter($event) ng-mouseleave=vm.mouseLeave($event) nk-touchstart="vm.buttonTouchStart($event, false)" nk-touchend=vm.buttonTouchEnd($event)> + </button> </span> <span class=input-group-btn-vertical ng-if=vm.touchSpinOptions.verticalButtons> <button class=bootstrap-touchspin-up ng-class=vm.touchSpinOptions.buttonUpClass type=button ng-disabled=vm.disabled ng-mousedown="vm.mouseDown($event, false)" ng-mouseup=vm.mouseUp($event) ng-mouseenter=vm.mouseEnter($event) ng-mouseleave=vm.mouseLeave($event) nk-touchstart="vm.buttonTouchStart($event, false)" nk-touchend=vm.buttonTouchEnd($event)> <i ng-class=vm.touchSpinOptions.verticalUpClass></i> </button> <button class=bootstrap-touchspin-down ng-class=vm.touchSpinOptions.buttonUpClass type=button ng-disabled=vm.disabled ng-mousedown="vm.mouseDown($event, true)" ng-mouseup=vm.mouseUp($event) ng-mouseenter=vm.mouseEnter($event) ng-mouseleave=vm.mouseLeave($event) nk-touchstart="vm.buttonTouchStart($event, true)" nk-touchend=vm.buttonTouchEnd($event)> <i ng-class=vm.touchSpinOptions.verticalDownClass></i> </button> </span> </div>'},function(t,n,e){"use strict";var o=e(11),i=e(7),s=e(5),r=e(9),u=e(10);t.exports=o.AngularES6.module("nk.touchspin").directive("touchSpin",i.TouchSpinDirective).directive("nkTouchend",s.TouchEndDirective).directive("nkTouchstart",r.TouchStartDirective).provider("touchSpinConfig",u.TouchSpinConfig).name},function(t,n){"use strict";var e=function(){function t(t,n,e){"ngInject";this.$element=t,this.$attrs=n,this.$scope=e,1===angular.version.major&&angular.version.minor<5&&this.$onInit()}return t.$inject=["$element","$attrs","$scope"],t.prototype.$onInit=function(){this.initializeEvents()},t.prototype.initializeEvents=function(){var t=this;this.$element.on("touchend",function(n){console.log("touchend"),t.$scope.$apply(function(){t.$scope.$eval(t.$attrs.nkTouchend,{$event:n})})})},t}();n.TouchEndController=e},function(t,n,e){"use strict";var o=e(4),i=function(){function t(){this.restrict="A",this.controller=o.TouchEndController}return t}();n.TouchEndDirective=i},function(t,n){"use strict";var e=function(){function t(t,n,e,o,i){"ngInject";this.$element=t,this.$attrs=n,this.$interval=e,this.$timeout=o,this.touchSpinConfig=i,this.inputElement=this.$element.find("input"),1===angular.version.major&&angular.version.minor<5&&this.$onInit()}return t.$inject=["$element","$attrs","$interval","$timeout","touchSpinConfig"],t.prototype.$onInit=function(){this.prepareNgModel(),this.prepareOptions(),this.initializeEvents()},t.prototype.startSpinUp=function(){var t=this;this.checkValue(),this.touchSpinOptions.verticalButtons?this.decrement():this.increment(),this.stopSpin(!0),this.clickStart=Date.now(),this.timeout=this.$timeout(function(){t.timer=t.$interval(function(){t.touchSpinOptions.verticalButtons?t.decrement():t.increment()},t.touchSpinOptions.stepInterval)},this.touchSpinOptions.stepIntervalDelay)},t.prototype.startSpinDown=function(){var t=this;this.checkValue(),this.touchSpinOptions.verticalButtons?this.increment():this.decrement(),this.clickStart=Date.now(),this.stopSpin(),this.$timeout(function(){t.timer=t.$interval(function(){t.touchSpinOptions.verticalButtons?t.increment():t.decrement()},t.touchSpinOptions.stepInterval)},this.touchSpinOptions.stepIntervalDelay)},t.prototype.stopSpin=function(t){var n=this;t||Date.now()-this.clickStart>this.touchSpinOptions.stepIntervalDelay?(this.$timeout.cancel(this.timeout),this.$interval.cancel(this.timer)):this.$timeout(function(){n.$timeout.cancel(n.timeout),n.$interval.cancel(n.timer)},this.touchSpinOptions.stepIntervalDelay)},t.prototype.checkValue=function(){if(this.ngModelController.$isEmpty(this.val))this.changeValue(this.touchSpinOptions.min);else if(this.val.match(/^-?(?:\d+|\d*\.\d+)$/i)){var t=parseFloat(this.val);t>this.touchSpinOptions.max?this.changeValue(this.touchSpinOptions.max):t<this.touchSpinOptions.min?this.changeValue(this.touchSpinOptions.min):this.changeValue(t)}else""!==this.oldVal?this.changeValue(parseFloat(this.oldVal)):this.changeValue(this.touchSpinOptions.min);this.focused=!1},t.prototype.focus=function(){this.focused=!0},t.prototype.keyUp=function(t){var n=t.keyCode||t.which;40!==n&&38!==n||(this.stopSpin(),t.preventDefault())},t.prototype.keyDown=function(t){var n=t.keyCode||t.which;38===n?(this.startSpinUp(),t.preventDefault()):40===n&&(this.startSpinDown(),t.preventDefault())},t.prototype.mouseDown=function(t,n){console.log("mouse down: "+t),this.isMouseButtonDown=!0,n?this.startSpinUp():this.startSpinDown()},t.prototype.mouseUp=function(t){console.log("mouse up: "+t),this.isMouseButtonDown=!1,this.stopSpin()},t.prototype.mouseLeave=function(t){console.log("mouse leave: "+t),this.isMouseButtonDown&&this.mouseUp(t)},t.prototype.buttonTouchStart=function(t,n){this.isButtonTouching=!0,n?this.startSpinUp():this.startSpinDown()},t.prototype.buttonTouchEnd=function(t){this.isButtonTouching=!1,this.stopSpin()},t.prototype.initializeEvents=function(){var t=this;this.inputElement.on("mousewheel DOMMouseScroll",function(n){if(t.touchSpinOptions.mousewheel&&t.focused){var e=angular.isUndefined(n.originalEvent)?n.wheelDelta||-n.wheelDeltaY||-n.detail:n.originalEvent.wheelDelta||-n.originalEvent.wheelDeltaY||-n.originalEvent.detail;n.stopPropagation(),n.preventDefault(),0>e?t.decrement():t.increment()}})},t.prototype.prepareNgModel=function(){var t=this;this.ngModelController=this.$element.controller("ngModel"),this.ngModelController.$formatters.push(function(n){return angular.isNumber(n)&&!t.ngModelController.$isEmpty(n)&&t.changeValue(n,!0,!0),n})},t.prototype.prepareOptions=function(){this.touchSpinOptions=angular.extend({},this.touchSpinConfig,this.options);var t=this.ngModelController.$modelValue||this.touchSpinOptions.min;this.changeValue(t,!0,!0)},t.prototype.changeValue=function(t,n,e){var o=this,i=Math.pow(10,this.touchSpinOptions.decimals);t=Math.round(t*i)/i,this.val=t.toFixed(this.touchSpinOptions.decimals),n||this.ngModelController.$setViewValue(t),!e&&this.$attrs.onChange&&this.$timeout(function(){o.onChange({value:t})})},t.prototype.decrement=function(){this.oldVal=this.val;var t=parseFloat(this.val)-this.touchSpinOptions.step;return t<this.touchSpinOptions.min?void this.changeValue(this.touchSpinOptions.min):void this.changeValue(t)},t.prototype.increment=function(){this.oldVal=this.val;var t=parseFloat(this.val)+this.touchSpinOptions.step;return t>this.touchSpinOptions.max?void this.changeValue(this.touchSpinOptions.max):void this.changeValue(t)},t}();n.TouchSpinController=e},function(t,n,e){"use strict";e(1);var o=e(6),i=function(){function t(){this.restrict="EA",this.require="^ngModel",this.scope={},this.bindToController={disabled:"=?",onChange:"&",options:"=?"},this.controller=o.TouchSpinController,this.controllerAs="vm",this.template=e(2)}return t}();n.TouchSpinDirective=i},function(t,n){"use strict";var e=function(){function t(t,n,e){"ngInject";this.$element=t,this.$attrs=n,this.$scope=e,1===angular.version.major&&angular.version.minor<5&&this.$onInit()}return t.$inject=["$element","$attrs","$scope"],t.prototype.$onInit=function(){this.initializeEvents()},t.prototype.initializeEvents=function(){var t=this;this.$element.on("touchstart",function(n){console.log("touchstart"),t.$scope.$apply(function(){t.$scope.$eval(t.$attrs.nkTouchstart,{$event:n})})})},t}();n.TouchStartController=e},function(t,n,e){"use strict";var o=e(8),i=function(){function t(){this.restrict="A",this.controller=o.TouchStartController}return t}();n.TouchStartDirective=i},function(t,n){"use strict";var e=function(){function t(){this.defaultTouchSpinOptions={buttonDownClass:"btn btn-default",buttonUpClass:"btn btn-default",decimals:0,max:100,min:0,step:1,mousewheel:!0,prefix:"",postfix:"",stepInterval:100,stepIntervalDelay:500,verticalButtons:!1,verticalDownClass:"glyphicon glyphicon-chevron-down",verticalUpClass:"glyphicon glyphicon-chevron-up"}}return t.prototype.defaults=function(t){this.defaultTouchSpinOptions=angular.extend({},this.defaultTouchSpinOptions,t)},t.prototype.$get=function(){return this.defaultTouchSpinOptions},t}();n.TouchSpinConfig=e},function(t,n){"use strict";var e=function(){function t(t,n){n=n||[],this.name=t,this.angularModule=angular.module(t,n)}return t.module=function(n,e){return e=e||[],new t(n,e)},t.prototype.constant=function(t,n){return this.angularModule.constant(t,n),this},t.prototype.config=function(t){return this.angularModule.config(t),this},t.prototype.controller=function(t,n){return this.angularModule.controller(t,n),this},t.prototype.directive=function(t,n){var e=this.normalizeConstructor(n);e.prototype.compile||(e.prototype.compile=function(){});var o=this.cloneFunction(e.prototype.compile);this.override(e.prototype,"compile",function(){return function(){return o.apply(this,arguments),e.prototype.link?e.prototype.link.bind(this):void 0}});var i=this.createFactoryArray(n);return this.angularModule.directive(t,i),this},t.prototype.factory=function(t,n){n=this.normalizeConstructor(n);var e=this.createFactoryArray(n);return this.angularModule.factory(t,e),this},t.prototype.filter=function(t,n){var e=this.createFilterArray(n);return this.angularModule.filter(t,e),this},t.prototype.service=function(t,n){return this.angularModule.service(t,n),this},t.prototype.provider=function(t,n){return this.angularModule.provider(t,n),this},t.prototype.run=function(t){return this.angularModule.run(t),this},t.prototype.normalizeConstructor=function(t){var n;if(angular.isArray(t.constructor)){var e=t.slice(0,t.length-1);n=t[t.length-1],n.$inject=e}else n=t;return n},t.prototype.createFactoryArray=function(t){var n=t.$inject||[],e=n.slice();return e.push(function(){for(var n=[],e=0;e<arguments.length;e++)n[e-0]=arguments[e];var o=new(t.bind.apply(t,[void 0].concat(n)));return o}),e},t.prototype.createFilterArray=function(t){var n=t.$inject||[],e=n.slice();return e.push(function(){for(var n=[],e=0;e<arguments.length;e++)n[e-0]=arguments[e];var o=new(t.bind.apply(t,[void 0].concat(n)));return o.filter}),e},t.prototype.cloneFunction=function(t){return function(){return t.apply(this,arguments)}},t.prototype.override=function(t,n,e){t[n]=e(t[n])},t}();n.AngularES6=e}])});